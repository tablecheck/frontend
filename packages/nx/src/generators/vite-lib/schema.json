{
  "$schema": "http://json-schema.org/schema",
  "$id": "ViteLib",
  "title": "Create a TypeScript Library",
  "description": "Create a TypeScript Library for use in a vite monorepo.",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Library name.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the library?",
      "pattern": "(?:^@[a-zA-Z0-9-*~][a-zA-Z0-9-*._~]*\\/[a-zA-Z0-9-~][a-zA-Z0-9-._~]*|^[a-zA-Z][^:]*)$"
    },
    "directory": {
      "type": "string",
      "description": "A directory where the lib is placed.",
      "x-priority": "important"
    },
    "projectNameAndRootFormat": {
      "description": "Whether to generate the project name and root directory as provided (`as-provided`) or generate them composing their values and taking the configured layout into account (`derived`).",
      "type": "string",
      "enum": ["as-provided", "derived"]
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["vitest", "none"],
      "description": "Test runner to use for unit tests.",
      "x-prompt": "Which unit test runner would you like to use?"
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the library (used for linting)."
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    },
    "testEnvironment": {
      "type": "string",
      "enum": ["jsdom", "node"],
      "description": "The test environment to use if unitTestRunner is set to jest or vitest.",
      "default": "jsdom"
    },
    "pascalCaseFiles": {
      "type": "boolean",
      "description": "Use pascal case file names.",
      "alias": "P",
      "default": false
    },
    "publishable": {
      "type": "boolean",
      "default": false,
      "description": "Generate a publishable library.",
      "x-priority": "important"
    },
    "importPath": {
      "type": "string",
      "description": "The library name used to import it, like @myorg/my-awesome-lib. Required for publishable library.",
      "x-priority": "important"
    },
    "buildable": {
      "type": "boolean",
      "default": true,
      "description": "Generate a buildable library.",
      "x-deprecated": "Use the `bundler` option for greater control (swc, tsc, rollup, vite, esbuild, none)."
    },
    "config": {
      "type": "string",
      "enum": ["workspace", "project", "npm-scripts"],
      "default": "project",
      "description": "Determines whether the project's executors should be configured in `workspace.json`, `project.json` or as npm scripts.",
      "x-priority": "internal"
    },
    "minimal": {
      "type": "boolean",
      "description": "Generate a library with a minimal setup. No README.md generated.",
      "default": false
    },
    "simpleName": {
      "description": "Don't include the directory in the generated file name.",
      "type": "boolean",
      "default": false
    }
  },
  "required": ["name"]
}
